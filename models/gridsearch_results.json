{
  "DecisionTree": {
    "model": "DecisionTreeClassifier(random_state=42)",
    "accuracy": 0.8952380952380953,
    "best_params": {
      "max_depth": null,
      "min_samples_split": 2
    }
  },
  "RandomForest": {
    "model": "RandomForestClassifier(n_estimators=50, random_state=42)",
    "accuracy": 0.942857142857143,
    "best_params": {
      "max_depth": null,
      "n_estimators": 50
    }
  },
  "SVM": {
    "model": "SVC(C=1, kernel='linear')",
    "accuracy": 0.9523809523809524,
    "best_params": {
      "C": 1,
      "kernel": "linear"
    }
  },
  "KNN": {
    "model": "KNeighborsClassifier(n_neighbors=3, weights='distance')",
    "accuracy": 0.942857142857143,
    "best_params": {
      "n_neighbors": 3,
      "weights": "distance"
    }
  },
  "AdaBoost": {
    "model": "AdaBoostClassifier(learning_rate=0.1, n_estimators=100, random_state=42)",
    "accuracy": 0.942857142857143,
    "best_params": {
      "learning_rate": 0.1,
      "n_estimators": 100
    }
  },
  "LogisticRegression": {
    "model": "LogisticRegression(C=1, max_iter=1000, solver='liblinear')",
    "accuracy": 0.942857142857143,
    "best_params": {
      "C": 1,
      "penalty": "l2"
    }
  }
}